{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc"
          }
        ]
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
        }
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "RdsProxy/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "DBCredentialsSecretAFB45EA2": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\"username\":\"syscdk\"}"
        },
        "Name": "RdsProxy-rds-credentials"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "DBCredentialsSecretAttachment8D28662C": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "DBCredentialsSecretAFB45EA2"
        },
        "TargetId": {
          "Ref": "DBInstance46641A50"
        },
        "TargetType": "AWS::RDS::DBInstance"
      }
    },
    "DBCredentialsArn15122902": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "DBCredentialsSecretAFB45EA2"
        },
        "Name": "rds-credentials-arn"
      }
    },
    "DBInstanceSubnetGroupF597B45B": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for DBInstance database",
        "SubnetIds": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        ]
      }
    },
    "DBInstanceSecurityGroup8BE42C36": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for DBInstance database",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "DBInstanceSecurityGroupfromRdsProxyDBInstanceRdsProxyproxyProxySecurityGroupEB245284IndirectPort2EDC4D33": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow connections to the database Instance from the Proxy",
        "FromPort": {
          "Fn::GetAtt": [
            "DBInstance46641A50",
            "Endpoint.Port"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DBInstanceSecurityGroup8BE42C36",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DBInstanceRdsProxyproxyProxySecurityGroupCC1FF042",
            "GroupId"
          ]
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DBInstance46641A50",
            "Endpoint.Port"
          ]
        }
      }
    },
    "DBInstanceSecurityGroupfromRdsProxyDBInstanceRdsProxyproxyProxySecurityGroupEB24528433068C96F3BC": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "allow db connection",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "DBInstanceSecurityGroup8BE42C36",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DBInstanceRdsProxyproxyProxySecurityGroupCC1FF042",
            "GroupId"
          ]
        },
        "ToPort": 3306
      }
    },
    "DBInstanceSecurityGroupfromRdsProxyrdsProxyHandlerSecurityGroup2D1BEBB53306DFFB15B5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "allow lambda connection",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "DBInstanceSecurityGroup8BE42C36",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "rdsProxyHandlerSecurityGroup6C514F99",
            "GroupId"
          ]
        },
        "ToPort": 3306
      }
    },
    "DBInstance46641A50": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t2.small",
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBSubnetGroupName": {
          "Ref": "DBInstanceSubnetGroupF597B45B"
        },
        "DeletionProtection": false,
        "Engine": "mysql",
        "EngineVersion": "5.7.30",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DBCredentialsSecretAFB45EA2"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DBCredentialsSecretAFB45EA2"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DBInstanceSecurityGroup8BE42C36",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "DBInstanceRdsProxyproxyIAMRole4CB97C4E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "rds.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "DBInstanceRdsProxyproxyIAMRoleDefaultPolicyB79610A3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBCredentialsSecretAFB45EA2"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DBInstanceRdsProxyproxyIAMRoleDefaultPolicyB79610A3",
        "Roles": [
          {
            "Ref": "DBInstanceRdsProxyproxyIAMRole4CB97C4E"
          }
        ]
      }
    },
    "DBInstanceRdsProxyproxyProxySecurityGroupCC1FF042": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for Database Proxy",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "DBInstanceRdsProxyproxy27D968E8": {
      "Type": "AWS::RDS::DBProxy",
      "Properties": {
        "Auth": [
          {
            "AuthScheme": "SECRETS",
            "IAMAuth": "DISABLED",
            "SecretArn": {
              "Ref": "DBCredentialsSecretAFB45EA2"
            }
          }
        ],
        "DBProxyName": "RdsProxy-proxy",
        "EngineFamily": "MYSQL",
        "RoleArn": {
          "Fn::GetAtt": [
            "DBInstanceRdsProxyproxyIAMRole4CB97C4E",
            "Arn"
          ]
        },
        "VpcSubnetIds": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        ],
        "DebugLogging": true,
        "RequireTLS": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DBInstanceRdsProxyproxyProxySecurityGroupCC1FF042",
              "GroupId"
            ]
          }
        ]
      }
    },
    "DBInstanceRdsProxyproxyProxyTargetGroupA20BD07F": {
      "Type": "AWS::RDS::DBProxyTargetGroup",
      "Properties": {
        "DBProxyName": {
          "Ref": "DBInstanceRdsProxyproxy27D968E8"
        },
        "TargetGroupName": "default",
        "ConnectionPoolConfigurationInfo": {},
        "DBInstanceIdentifiers": [
          {
            "Ref": "DBInstance46641A50"
          }
        ]
      }
    },
    "rdsProxyHandlerServiceRoleD70E0A19": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "rdsProxyHandlerServiceRoleDefaultPolicyEFCE83C1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DBCredentialsSecretAFB45EA2"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "rdsProxyHandlerServiceRoleDefaultPolicyEFCE83C1",
        "Roles": [
          {
            "Ref": "rdsProxyHandlerServiceRoleD70E0A19"
          }
        ]
      }
    },
    "rdsProxyHandlerSecurityGroup6C514F99": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function RdsProxyrdsProxyHandler185B36A0",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "rdsProxyHandlerDA266FA9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbS3BucketE0DD5E5D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbS3VersionKeyEE69A8DA"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbS3VersionKeyEE69A8DA"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "rdsProxyHandlerServiceRoleD70E0A19",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "PROXY_ENDPOINT": {
              "Fn::GetAtt": [
                "DBInstanceRdsProxyproxy27D968E8",
                "Endpoint"
              ]
            },
            "RDS_SECRET_NAME": "RdsProxy-rds-credentials"
          }
        },
        "Handler": "rds.handler",
        "Runtime": "nodejs12.x",
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "rdsProxyHandlerSecurityGroup6C514F99",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A"
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
            }
          ]
        }
      },
      "DependsOn": [
        "rdsProxyHandlerServiceRoleDefaultPolicyEFCE83C1",
        "rdsProxyHandlerServiceRoleD70E0A19"
      ]
    },
    "EndpointEEF1FD8F": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "Endpoint",
        "ProtocolType": "HTTP"
      }
    },
    "EndpointDefaultRouteLambdaIntegrationPermission7193A698": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rdsProxyHandlerDA266FA9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "EndpointDefaultRouteLambdaIntegration06279B9B": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "rdsProxyHandlerDA266FA9",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "EndpointDefaultRouteB7B22F2B": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "RouteKey": "$default",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "EndpointDefaultRouteLambdaIntegration06279B9B"
              }
            ]
          ]
        }
      }
    },
    "EndpointDefaultStage0AD21F27": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "StageName": "$default",
        "AutoDeploy": true
      }
    }
  },
  "Parameters": {
    "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbS3BucketE0DD5E5D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdb\""
    },
    "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbS3VersionKeyEE69A8DA": {
      "Type": "String",
      "Description": "S3 key for asset version \"6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdb\""
    },
    "AssetParameters6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdbArtifactHash64F8B30C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"6c69f421eddea7103620a033e97ec6707564015818ed8697f42b5eda56d6dbdb\""
    }
  },
  "Outputs": {
    "HTTPAPIUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EndpointEEF1FD8F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/"
          ]
        ]
      }
    }
  }
}