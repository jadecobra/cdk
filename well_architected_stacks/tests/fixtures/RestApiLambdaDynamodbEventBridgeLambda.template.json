{
 "Resources": {
  "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic"
   }
  },
  "ApiLambdaDynamoDbLambdaFunctionAwsXraySdkLambdaLayer57B0C0E3": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Description": "aws-xray-sdk Lambda Layer"
   }
  },
  "ApiLambdaDynamoDbLambdaFunctionServiceRole6BB5987D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "ApiLambdaDynamoDbLambdaFunctionServiceRoleDefaultPolicy814FE386": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ApiLambdaDynamoDbDynamoDbTable2A3B62A6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ApiLambdaDynamoDbDynamoDbTable2A3B62A6",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiLambdaDynamoDbLambdaFunctionServiceRoleDefaultPolicy814FE386",
    "Roles": [
     {
      "Ref": "ApiLambdaDynamoDbLambdaFunctionServiceRole6BB5987D"
     }
    ]
   }
  },
  "ApiLambdaDynamoDbLambdaFunction64B7D79F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6S3Bucket22BBA74B"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6S3VersionKeyA5A20113"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6S3VersionKeyA5A20113"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbLambdaFunctionServiceRole6BB5987D",
      "Arn"
     ]
    },
    "Architectures": [
     "arm64"
    ],
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE_NAME": {
       "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
      }
     }
    },
    "Handler": "webservice.handler",
    "Layers": [
     {
      "Ref": "ApiLambdaDynamoDbLambdaFunctionAwsXraySdkLambdaLayer57B0C0E3"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 20,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ApiLambdaDynamoDbLambdaFunctionServiceRoleDefaultPolicy814FE386",
    "ApiLambdaDynamoDbLambdaFunctionServiceRole6BB5987D"
   ]
  },
  "ApiLambdaDynamoDbLambdaFunctionLambdaInvocationsErrorsGreaterThan2Percent24F2BC12": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(errors / invocations) * 100",
      "Id": "expr_1",
      "Label": "invocations_errored_percentage_last_5_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbLambdaFunctionLambdaP99LongDurationGreaterThan1sCF1D0CE3": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
      }
     }
    ],
    "ExtendedStatistic": "p99",
    "MetricName": "Duration",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Threshold": 1000,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbLambdaFunctionLambdaThrottledInvocationsGreaterThan2PercentEF58B4B8": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(throttles * 100) / (invocations + throttles)",
      "Id": "expr_1",
      "Label": "throttled_requests_percentage_last_30_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "throttles",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
          }
         }
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "RestApiLambdaFunction"
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionCloudWatchRoleE1B2D20B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionAccount18AA4B44": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbRestApiLambdaFunctionCloudWatchRoleE1B2D20B",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentE21F67A443c8b47d367400e880df2c9ab7bd764a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "ApiLambdaDynamoDbRestApiLambdaFunctionproxyANYB55BFD57",
    "ApiLambdaDynamoDbRestApiLambdaFunctionproxy05D08A6D",
    "ApiLambdaDynamoDbRestApiLambdaFunctionANY09F24B53"
   ]
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentStageprod6A003C93": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
    },
    "DeploymentId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentE21F67A443c8b47d367400e880df2c9ab7bd764a"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "ApiLambdaDynamoDbRestApiLambdaFunctionAccount18AA4B44"
   ]
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionproxy05D08A6D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionproxyANYApiPermissionRestApiLambdaDynamodbEventBridgeLambdaApiLambdaDynamoDbRestApiLambdaFunction0995B963ANYproxyD1DD9377": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbLambdaFunction64B7D79F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "/",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentStageprod6A003C93"
       },
       "/*/*"
      ]
     ]
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionproxyANYApiPermissionTestRestApiLambdaDynamodbEventBridgeLambdaApiLambdaDynamoDbRestApiLambdaFunction0995B963ANYproxyBCB3D623": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbLambdaFunction64B7D79F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionproxyANYB55BFD57": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionproxy05D08A6D"
    },
    "RestApiId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ApiLambdaDynamoDbLambdaFunction64B7D79F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionANYApiPermissionRestApiLambdaDynamodbEventBridgeLambdaApiLambdaDynamoDbRestApiLambdaFunction0995B963ANYF1A4D74B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbLambdaFunction64B7D79F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "/",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentStageprod6A003C93"
       },
       "/*/"
      ]
     ]
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionANYApiPermissionTestRestApiLambdaDynamodbEventBridgeLambdaApiLambdaDynamoDbRestApiLambdaFunction0995B963ANY899110CD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbLambdaFunction64B7D79F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   }
  },
  "ApiLambdaDynamoDbRestApiLambdaFunctionANY09F24B53": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Fn::GetAtt": [
      "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ApiLambdaDynamoDbLambdaFunction64B7D79F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   }
  },
  "ApiLambdaDynamoDbRestApiGateway4XXErrorsGreaterThanOnePercentE93C4BA8": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "m1 / m2 * 100",
      "Id": "expr_1",
      "Label": "api_gateway_4XX_errors_percentage"
     },
     {
      "Id": "m1",
      "Label": "4XX_errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
          }
         }
        ],
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 300,
       "Stat": "Sum",
       "Unit": "Count"
      },
      "ReturnData": false
     },
     {
      "Id": "m2",
      "Label": "number_of_requests",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
          }
         }
        ],
        "MetricName": "Count",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 300,
       "Stat": "Sum",
       "Unit": "Count"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbRestApiGateway5XXErrorsGreaterThanZeroA77A2233": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Id": "m1",
      "Label": "api_gateway_5XX_errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
          }
         }
        ],
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 900,
       "Stat": "p99",
       "Unit": "Count"
      },
      "ReturnData": true
     }
    ],
    "Threshold": 0,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbRestApiGatewayP99LatencyGreaterThanOneSecondC3B615AE": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Id": "m1",
      "Label": "api_gateway_latency",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
          }
         }
        ],
        "MetricName": "Latency",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 900,
       "Stat": "p99",
       "Unit": "Count"
      },
      "ReturnData": true
     }
    ],
    "Threshold": 1000,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbDynamoDbTable2A3B62A6": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "RequestID",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "ExpirationTime",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "RequestID",
      "AttributeType": "S"
     },
     {
      "AttributeName": "ExpirationTime",
      "AttributeType": "N"
     },
     {
      "AttributeName": "SiteUrl",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "UrlIndex",
      "KeySchema": [
       {
        "AttributeName": "SiteUrl",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "ExpirationTime",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ExpirationTime",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ApiLambdaDynamoDbDynamoDbTableUserErrorsGreaterThanZero70CBFB49": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "MetricName": "UserErrors",
    "Namespace": "AWS/DynamoDB",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 0,
    "TreatMissingData": "notBreaching"
   }
  },
  "ApiLambdaDynamoDbDynamoDbTableReadsWritesThrottled7B100516": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "m1 + m2",
      "Id": "expr_1",
      "Label": "dynamodb_throttles"
     },
     {
      "Id": "m1",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "TableName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
          }
         }
        ],
        "MetricName": "ReadThrottleEvents",
        "Namespace": "AWS/DynamoDB"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "m2",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "TableName",
          "Value": {
           "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
          }
         }
        ],
        "MetricName": "WriteThrottleEvents",
        "Namespace": "AWS/DynamoDB"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   }
  },
  "webserviceErrorRuleCE293636": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Failed Webservice Call",
    "EventPattern": {
     "detail": {
      "status": [
       "fail"
      ]
     },
     "detail-type": [
      "httpcall"
     ],
     "source": [
      "cdkpatterns.eventbridge.circuitbreaker"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "errorLambdaFunction47F9F7B6",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   }
  },
  "webserviceErrorRuleAllowEventRuleRestApiLambdaDynamodbEventBridgeLambdaerrorLambdaFunction31F6E13ED438C73A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "errorLambdaFunction47F9F7B6",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "webserviceErrorRuleCE293636",
      "Arn"
     ]
    }
   }
  },
  "errorAwsXraySdkLambdaLayer444F6716": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Description": "aws-xray-sdk Lambda Layer"
   }
  },
  "errorLambdaFunctionServiceRoleBA0401A4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "errorLambdaFunctionServiceRoleDefaultPolicy7F656B38": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ApiLambdaDynamoDbDynamoDbTable2A3B62A6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ApiLambdaDynamoDbDynamoDbTable2A3B62A6",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "errorLambdaFunctionServiceRoleDefaultPolicy7F656B38",
    "Roles": [
     {
      "Ref": "errorLambdaFunctionServiceRoleBA0401A4"
     }
    ]
   }
  },
  "errorLambdaFunction47F9F7B6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4S3Bucket73883EEA"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4S3VersionKey534E5360"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4S3VersionKey534E5360"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "errorLambdaFunctionServiceRoleBA0401A4",
      "Arn"
     ]
    },
    "Architectures": [
     "arm64"
    ],
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE_NAME": {
       "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
      }
     }
    },
    "Handler": "error.handler",
    "Layers": [
     {
      "Ref": "errorAwsXraySdkLambdaLayer444F6716"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 3,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "errorLambdaFunctionServiceRoleDefaultPolicy7F656B38",
    "errorLambdaFunctionServiceRoleBA0401A4"
   ]
  },
  "errorLambdaInvocationsErrorsGreaterThan2Percent33159618": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(errors / invocations) * 100",
      "Id": "expr_1",
      "Label": "invocations_errored_percentage_last_5_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "errorLambdaFunction47F9F7B6"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "errorLambdaFunction47F9F7B6"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "errorLambdaP99LongDurationGreaterThan1s31827188": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "errorLambdaFunction47F9F7B6"
      }
     }
    ],
    "ExtendedStatistic": "p99",
    "MetricName": "Duration",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Threshold": 1000,
    "TreatMissingData": "notBreaching"
   }
  },
  "errorLambdaThrottledInvocationsGreaterThan2PercentC31C6FCE": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "RestApiLambdaDynamodbEventBridgeLambdaErrorTopic0192EC91"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(throttles * 100) / (invocations + throttles)",
      "Id": "expr_1",
      "Label": "throttled_requests_percentage_last_30_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "errorLambdaFunction47F9F7B6"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "throttles",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "errorLambdaFunction47F9F7B6"
          }
         }
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "CloudWatchDashBoard043C60B6": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"dynamodb_latency\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/DynamoDB\",\"SuccessfulRequestLatency\",\"Operation\",\"GetItem\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"],[\"AWS/DynamoDB\",\"SuccessfulRequestLatency\",\"Operation\",\"UpdateItem\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"],[\"AWS/DynamoDB\",\"SuccessfulRequestLatency\",\"Operation\",\"PutItem\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"],[\"AWS/DynamoDB\",\"SuccessfulRequestLatency\",\"Operation\",\"DeleteItem\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"],[\"AWS/DynamoDB\",\"SuccessfulRequestLatency\",\"Operation\",\"Query\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"dynamodb_consumed_read_write_units\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[\"AWS/DynamoDB\",\"ConsumedReadCapacityUnits\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"],[\"AWS/DynamoDB\",\"ConsumedWriteCapacityUnits\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"dynamodb_throttles\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/DynamoDB\",\"ReadThrottleEvents\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\",{\"stat\":\"Sum\"}],[\"AWS/DynamoDB\",\"WriteThrottleEvents\",\"TableName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbDynamoDbTable2A3B62A6"
       },
       "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_error_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"invocations_errored_percentage_last_5_mins\",\"expression\":\"(errors / invocations) * 100\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"errors\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_duration\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"p99\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_throttle_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"throttled_requests_percentage_last_30_mins\",\"expression\":\"(throttles * 100) / (invocations + throttles)\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "ApiLambdaDynamoDbLambdaFunction64B7D79F"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"throttles\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Requests\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[\"AWS/ApiGateway\",\"Count\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"# Requests\",\"period\":900,\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"api_gateway_latency\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"api_gateway_latency_p50\",\"period\":900,\"stat\":\"p50\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"api_gateway_latency_p90\",\"period\":900,\"stat\":\"p90\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"api_gateway_latency_p99\",\"period\":900,\"stat\":\"p99\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":48,\"properties\":{\"view\":\"timeSeries\",\"title\":\"api_gateway_errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/ApiGateway\",\"4XXError\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"api_gateway_4XXErrors\",\"period\":900,\"stat\":\"Sum\"}],[\"AWS/ApiGateway\",\"5XXError\",\"ApiId\",\"",
       {
        "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
       },
       "\",{\"label\":\"api_gateway_5XXErrors\",\"period\":900,\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":54,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_error_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"invocations_errored_percentage_last_5_mins\",\"expression\":\"(errors / invocations) * 100\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"errors\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":60,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_duration\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"p99\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":66,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_throttle_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"throttled_requests_percentage_last_30_mins\",\"expression\":\"(throttles * 100) / (invocations + throttles)\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "errorLambdaFunction47F9F7B6"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"throttles\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    }
   }
  }
 },
 "Outputs": {
  "ApiLambdaDynamoDbRestApiLambdaFunctionEndpoint7A9755D2": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentStageprod6A003C93"
      },
      "/"
     ]
    ]
   }
  },
  "ApiLambdaDynamoDbRestApiGatewayRestApiGatewayURLC8BA6B08": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiLambdaDynamoDbRestApiLambdaFunction16D478B8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiLambdaDynamoDbRestApiLambdaFunctionDeploymentStageprod6A003C93"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF": {
   "Type": "String",
   "Description": "S3 bucket for asset \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
  },
  "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B": {
   "Type": "String",
   "Description": "S3 key for asset version \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
  },
  "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50ArtifactHashAA3157EB": {
   "Type": "String",
   "Description": "Artifact hash for asset \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
  },
  "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6S3Bucket22BBA74B": {
   "Type": "String",
   "Description": "S3 bucket for asset \"ed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6\""
  },
  "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6S3VersionKeyA5A20113": {
   "Type": "String",
   "Description": "S3 key for asset version \"ed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6\""
  },
  "AssetParametersed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6ArtifactHashF4441879": {
   "Type": "String",
   "Description": "Artifact hash for asset \"ed9ac5a107ec7491a4bcb9ff25537410c5846b58dccd190585c1ce76b105dca6\""
  },
  "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4S3Bucket73883EEA": {
   "Type": "String",
   "Description": "S3 bucket for asset \"44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4\""
  },
  "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4S3VersionKey534E5360": {
   "Type": "String",
   "Description": "S3 key for asset version \"44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4\""
  },
  "AssetParameters44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4ArtifactHashBF29D645": {
   "Type": "String",
   "Description": "Artifact hash for asset \"44df117aa26070eec97be30d9450a4f5efdb18c79b84b1607418684bf2dae0a4\""
  }
 }
}