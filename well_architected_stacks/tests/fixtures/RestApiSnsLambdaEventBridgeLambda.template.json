{
  "Resources": {
    "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "RestApiSnsLambdaEventBridgeLambdaErrorTopic"
      }
    },
    "EventBus7B8748AA": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "RestApiSnsLambdaEventBridgeLambda"
      }
    },
    "destinedSnsTopic10FF3CCB": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "destinedSnsTopic"
      }
    },
    "eventbridgerulesuccess5ABB2AD6": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "all success events are caught here and logged centrally",
        "EventBusName": {
          "Ref": "EventBus7B8748AA"
        },
        "EventPattern": {
          "detail": {
            "responsePayload": {
              "source": ["cdkpatterns.the-destined-lambda"],
              "action": ["message"]
            },
            "requestContext": {
              "condition": ["Success"]
            }
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": ["successLambdaFunction66858E1F", "Arn"]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "eventbridgerulesuccessAllowEventRuleRestApiSnsLambdaEventBridgeLambdasuccessLambdaFunction1291485602402562": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": ["successLambdaFunction66858E1F", "Arn"]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": ["eventbridgerulesuccess5ABB2AD6", "Arn"]
        }
      }
    },
    "successAwsXraySdkLambdaLayerEC3C86D3": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "aws-xray-sdk Lambda Layer"
      }
    },
    "successLambdaFunctionServiceRoleA04EFE93": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "successLambdaFunctionServiceRoleDefaultPolicyE6E9B7F0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["xray:PutTraceSegments", "xray:PutTelemetryRecords"],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "successLambdaFunctionServiceRoleDefaultPolicyE6E9B7F0",
        "Roles": [
          {
            "Ref": "successLambdaFunctionServiceRoleA04EFE93"
          }
        ]
      }
    },
    "successLambdaFunction66858E1F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5S3BucketD995E17A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5S3VersionKeyA42935FD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5S3VersionKeyA42935FD"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": ["successLambdaFunctionServiceRoleA04EFE93", "Arn"]
        },
        "Architectures": ["arm64"],
        "Handler": "success.handler",
        "Layers": [
          {
            "Ref": "successAwsXraySdkLambdaLayerEC3C86D3"
          }
        ],
        "Runtime": "python3.9",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "successLambdaFunctionServiceRoleDefaultPolicyE6E9B7F0",
        "successLambdaFunctionServiceRoleA04EFE93"
      ]
    },
    "successLambdaFunctionEventInvokeConfigF84A57AC": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "successLambdaFunction66858E1F"
        },
        "Qualifier": "$LATEST",
        "MaximumRetryAttempts": 2
      }
    },
    "successLambdaInvocationsErrorsGreaterThan2Percent0FD0239C": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(errors / invocations) * 100",
            "Id": "expr_1",
            "Label": "invocations_errored_percentage_last_5_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "successLambdaFunction66858E1F"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "successLambdaFunction66858E1F"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "successLambdaP99LongDurationGreaterThan1s8A494FE2": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "successLambdaFunction66858E1F"
            }
          }
        ],
        "ExtendedStatistic": "p99",
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Threshold": 1000,
        "TreatMissingData": "notBreaching"
      }
    },
    "successLambdaThrottledInvocationsGreaterThan2Percent706ADE0E": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(throttles * 100) / (invocations + throttles)",
            "Id": "expr_1",
            "Label": "throttled_requests_percentage_last_30_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "successLambdaFunction66858E1F"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "throttles",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "successLambdaFunction66858E1F"
                    }
                  }
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "eventbridgerulefailure2A9FCC66": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "all failure events are caught here and logged centrally",
        "EventBusName": {
          "Ref": "EventBus7B8748AA"
        },
        "EventPattern": {
          "detail": {
            "responsePayload": {
              "errorType": ["Error"]
            }
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": ["failureLambdaFunctionCA319F51", "Arn"]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "eventbridgerulefailureAllowEventRuleRestApiSnsLambdaEventBridgeLambdafailureLambdaFunction7BE6635D470BCFA7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": ["failureLambdaFunctionCA319F51", "Arn"]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": ["eventbridgerulefailure2A9FCC66", "Arn"]
        }
      }
    },
    "failureAwsXraySdkLambdaLayer532098E4": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "aws-xray-sdk Lambda Layer"
      }
    },
    "failureLambdaFunctionServiceRole62207014": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "failureLambdaFunctionServiceRoleDefaultPolicyDE711E70": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["xray:PutTraceSegments", "xray:PutTelemetryRecords"],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "failureLambdaFunctionServiceRoleDefaultPolicyDE711E70",
        "Roles": [
          {
            "Ref": "failureLambdaFunctionServiceRole62207014"
          }
        ]
      }
    },
    "failureLambdaFunctionCA319F51": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764S3Bucket82692E97"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764S3VersionKey64F57DA5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764S3VersionKey64F57DA5"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": ["failureLambdaFunctionServiceRole62207014", "Arn"]
        },
        "Architectures": ["arm64"],
        "Handler": "failure.handler",
        "Layers": [
          {
            "Ref": "failureAwsXraySdkLambdaLayer532098E4"
          }
        ],
        "Runtime": "python3.9",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "failureLambdaFunctionServiceRoleDefaultPolicyDE711E70",
        "failureLambdaFunctionServiceRole62207014"
      ]
    },
    "failureLambdaFunctionEventInvokeConfigD2892253": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "failureLambdaFunctionCA319F51"
        },
        "Qualifier": "$LATEST",
        "MaximumRetryAttempts": 2
      }
    },
    "failureLambdaInvocationsErrorsGreaterThan2Percent70C336F0": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(errors / invocations) * 100",
            "Id": "expr_1",
            "Label": "invocations_errored_percentage_last_5_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "failureLambdaFunctionCA319F51"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "failureLambdaFunctionCA319F51"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "failureLambdaP99LongDurationGreaterThan1sD2330EE6": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "failureLambdaFunctionCA319F51"
            }
          }
        ],
        "ExtendedStatistic": "p99",
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Threshold": 1000,
        "TreatMissingData": "notBreaching"
      }
    },
    "failureLambdaThrottledInvocationsGreaterThan2Percent2B9C6873": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(throttles * 100) / (invocations + throttles)",
            "Id": "expr_1",
            "Label": "throttled_requests_percentage_last_30_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "failureLambdaFunctionCA319F51"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "throttles",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "failureLambdaFunctionCA319F51"
                    }
                  }
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "destinedlambdaAwsXraySdkLambdaLayer27762818": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "aws-xray-sdk Lambda Layer"
      }
    },
    "destinedlambdaLambdaFunctionServiceRole98020EF3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "destinedlambdaLambdaFunctionServiceRoleDefaultPolicyF0A7B6B4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["xray:PutTraceSegments", "xray:PutTelemetryRecords"],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["EventBus7B8748AA", "Arn"]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "destinedlambdaLambdaFunctionServiceRoleDefaultPolicyF0A7B6B4",
        "Roles": [
          {
            "Ref": "destinedlambdaLambdaFunctionServiceRole98020EF3"
          }
        ]
      }
    },
    "destinedlambdaLambdaFunctionF7A0CCCA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791S3BucketD62F84EE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791S3VersionKey75761FB5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791S3VersionKey75761FB5"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "destinedlambdaLambdaFunctionServiceRole98020EF3",
            "Arn"
          ]
        },
        "Architectures": ["arm64"],
        "Handler": "destined_lambda.handler",
        "Layers": [
          {
            "Ref": "destinedlambdaAwsXraySdkLambdaLayer27762818"
          }
        ],
        "Runtime": "python3.9",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "destinedlambdaLambdaFunctionServiceRoleDefaultPolicyF0A7B6B4",
        "destinedlambdaLambdaFunctionServiceRole98020EF3"
      ]
    },
    "destinedlambdaLambdaFunctionEventInvokeConfig7B94F493": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
        },
        "Qualifier": "$LATEST",
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": ["EventBus7B8748AA", "Arn"]
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": ["EventBus7B8748AA", "Arn"]
            }
          }
        },
        "MaximumRetryAttempts": 0
      }
    },
    "destinedlambdaLambdaFunctionAllowInvokeRestApiSnsLambdaEventBridgeLambdadestinedSnsTopicEF1B6743F5B2E26E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": ["destinedlambdaLambdaFunctionF7A0CCCA", "Arn"]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "destinedSnsTopic10FF3CCB"
        }
      }
    },
    "destinedlambdaLambdaFunctiondestinedSnsTopic7D02DD24": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "destinedSnsTopic10FF3CCB"
        },
        "Endpoint": {
          "Fn::GetAtt": ["destinedlambdaLambdaFunctionF7A0CCCA", "Arn"]
        }
      }
    },
    "destinedlambdaLambdaInvocationsErrorsGreaterThan2PercentEAAA757D": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(errors / invocations) * 100",
            "Id": "expr_1",
            "Label": "invocations_errored_percentage_last_5_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
                    }
                  }
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "destinedlambdaLambdaP99LongDurationGreaterThan1s3E9B0275": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
            }
          }
        ],
        "ExtendedStatistic": "p99",
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Threshold": 1000,
        "TreatMissingData": "notBreaching"
      }
    },
    "destinedlambdaLambdaThrottledInvocationsGreaterThan2Percent8FFFDFF8": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "(throttles * 100) / (invocations + throttles)",
            "Id": "expr_1",
            "Label": "throttled_requests_percentage_last_30_mins"
          },
          {
            "Id": "invocations",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
                    }
                  }
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          },
          {
            "Id": "throttles",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "destinedlambdaLambdaFunctionF7A0CCCA"
                    }
                  }
                ],
                "MetricName": "Throttles",
                "Namespace": "AWS/Lambda"
              },
              "Period": 300,
              "Stat": "Sum"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 2,
        "TreatMissingData": "notBreaching"
      }
    },
    "RestApi0C43BF4B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "RestApi"
      }
    },
    "RestApiCloudWatchRoleE3ED6605": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RestApiAccount7C83CF5A": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": ["RestApiCloudWatchRoleE3ED6605", "Arn"]
        }
      },
      "DependsOn": ["RestApi0C43BF4B"],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RestApiDeployment180EC503e315398c5d20eff625d48e3ed69836ba": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "RestApiSendEventGET9ED8AC30",
        "RestApiSendEvent02C4F03F",
        "RestApierrorResponse2EE521BA",
        "RestApipollResponse8796EA23"
      ]
    },
    "RestApiDeploymentStageprod3855DE66": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "DeploymentId": {
          "Ref": "RestApiDeployment180EC503e315398c5d20eff625d48e3ed69836ba"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "MetricsEnabled": true,
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod"
      },
      "DependsOn": ["RestApiAccount7C83CF5A"]
    },
    "RestApiSendEvent02C4F03F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": ["RestApi0C43BF4B", "RootResourceId"]
        },
        "PathPart": "SendEvent",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        }
      }
    },
    "RestApiSendEventGET9ED8AC30": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RestApiSendEvent02C4F03F"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": ["RestApiSnsApiGatewayServiceRole3F60FED6", "Arn"]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "{\"message\": \"Message added to SNS topic\"}"
              },
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Content-Type": "application/json",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "ResponseTemplates": {
                "application/json": "{\"state\":\"error\",\"message\":\"$util.escapeJavaScript($input.path('$.errorMessage'))\"}"
              },
              "SelectionPattern": "^\\[Error\\].*",
              "StatusCode": "400"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "Action=Publish&Version=2010-03-31&Message=please $input.params().querystring.get('mode')&TargetArn=$util.urlEncode('",
                  {
                    "Ref": "destinedSnsTopic10FF3CCB"
                  },
                  "')"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": "arn:aws:apigateway:us-east-1:sns:path//"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RestApipollResponse8796EA23"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RestApierrorResponse2EE521BA"
              }
            },
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "400"
          }
        ]
      }
    },
    "RestApipollResponse8796EA23": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "ContentType": "application/json",
        "Name": "pollResponse",
        "Schema": {
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "pollResponse",
          "type": "object"
        }
      }
    },
    "RestApierrorResponse2EE521BA": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "ContentType": "application/json",
        "Name": "errorResponse",
        "Schema": {
          "properties": {
            "message": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "errorResponse",
          "type": "object"
        }
      }
    },
    "RestApiSnsApiGatewayServiceRole3F60FED6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "RestApiSns4XXErrorsGreaterThanOnePercent198B4654": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Expression": "m1 / m2 * 100",
            "Id": "expr_1",
            "Label": "api_gateway_4XX_errors_percentage"
          },
          {
            "Id": "m1",
            "Label": "4XX_errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiId",
                    "Value": {
                      "Ref": "RestApi0C43BF4B"
                    }
                  }
                ],
                "MetricName": "4XXError",
                "Namespace": "AWS/ApiGateway"
              },
              "Period": 300,
              "Stat": "Sum",
              "Unit": "Count"
            },
            "ReturnData": false
          },
          {
            "Id": "m2",
            "Label": "number_of_requests",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiId",
                    "Value": {
                      "Ref": "RestApi0C43BF4B"
                    }
                  }
                ],
                "MetricName": "Count",
                "Namespace": "AWS/ApiGateway"
              },
              "Period": 300,
              "Stat": "Sum",
              "Unit": "Count"
            },
            "ReturnData": false
          }
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching"
      }
    },
    "RestApiSns5XXErrorsGreaterThanZero1FC921F5": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "api_gateway_5XX_errors",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiId",
                    "Value": {
                      "Ref": "RestApi0C43BF4B"
                    }
                  }
                ],
                "MetricName": "5XXError",
                "Namespace": "AWS/ApiGateway"
              },
              "Period": 900,
              "Stat": "p99",
              "Unit": "Count"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching"
      }
    },
    "RestApiSnsP99LatencyGreaterThanOneSecondE00F8259": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 6,
        "AlarmActions": [
          {
            "Ref": "RestApiSnsLambdaEventBridgeLambdaErrorTopic918E6727"
          }
        ],
        "DatapointsToAlarm": 1,
        "Metrics": [
          {
            "Id": "m1",
            "Label": "api_gateway_latency",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "ApiId",
                    "Value": {
                      "Ref": "RestApi0C43BF4B"
                    }
                  }
                ],
                "MetricName": "Latency",
                "Namespace": "AWS/ApiGateway"
              },
              "Period": 900,
              "Stat": "p99",
              "Unit": "Count"
            },
            "ReturnData": true
          }
        ],
        "Threshold": 1000,
        "TreatMissingData": "notBreaching"
      }
    }
  },
  "Parameters": {
    "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3BucketC7F143AF": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
    },
    "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50S3VersionKeyDE6F367B": {
      "Type": "String",
      "Description": "S3 key for asset version \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
    },
    "AssetParametersab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50ArtifactHashAA3157EB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ab1166279d7c8a56e3bf81a33028c5971446eeb0d52a44ef75a169b7b8900e50\""
    },
    "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5S3BucketD995E17A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5\""
    },
    "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5S3VersionKeyA42935FD": {
      "Type": "String",
      "Description": "S3 key for asset version \"0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5\""
    },
    "AssetParameters0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5ArtifactHashE7B528A4": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0d1ef6a1d0d323c58939c326eaf8ea8179291f62c8959ae875853ca30ea18cf5\""
    },
    "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764S3Bucket82692E97": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764\""
    },
    "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764S3VersionKey64F57DA5": {
      "Type": "String",
      "Description": "S3 key for asset version \"e58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764\""
    },
    "AssetParameterse58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764ArtifactHash23FE152D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e58ea58da075d69369410178cf25ac012dfdb71ad4ddeb5bc5573dad443f8764\""
    },
    "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791S3BucketD62F84EE": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791\""
    },
    "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791S3VersionKey75761FB5": {
      "Type": "String",
      "Description": "S3 key for asset version \"f47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791\""
    },
    "AssetParametersf47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791ArtifactHashFB2D3477": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f47fa4e7e6b1d5913417c6467c61575075a617867274095a1e8f114b410a0791\""
    }
  },
  "Outputs": {
    "RestApiEndpoint0551178A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66"
            },
            "/"
          ]
        ]
      }
    },
    "RestApiSnsRestApiSnsURLF646A3A7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66"
            },
            "/"
          ]
        ]
      }
    }
  }
}
