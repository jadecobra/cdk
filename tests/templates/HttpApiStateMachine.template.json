{
 "Resources": {
  "StateMachineErrorTopic38C39788": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "StateMachineError"
   }
  },
  "lambdafunctionawsxraysdkLambdaLayer93A277D9": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0.zip"
    },
    "Description": "aws-xray-sdk Lambda Layer"
   }
  },
  "lambdafunctionLambdaFunctionServiceRoleB65A6C74": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "lambdafunctionLambdaFunctionServiceRoleDefaultPolicyEB5D1D47": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lambdafunctionLambdaFunctionServiceRoleDefaultPolicyEB5D1D47",
    "Roles": [
     {
      "Ref": "lambdafunctionLambdaFunctionServiceRoleB65A6C74"
     }
    ]
   }
  },
  "lambdafunctionLambdaFunction099DEFEA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c944806b0127d91dfd309016fdfded3afe265c8a1778acee49d947ece0860142.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "lambdafunctionLambdaFunctionServiceRoleB65A6C74",
      "Arn"
     ]
    },
    "Handler": "lambda_function.handler",
    "Layers": [
     {
      "Ref": "lambdafunctionawsxraysdkLambdaLayer93A277D9"
     }
    ],
    "Runtime": "python3.9",
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "lambdafunctionLambdaFunctionServiceRoleDefaultPolicyEB5D1D47",
    "lambdafunctionLambdaFunctionServiceRoleB65A6C74"
   ]
  },
  "lambdafunctionLambdaInvocationsErrorsGreaterThan2Percent2398C04A": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineErrorTopic38C39788"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(errors / invocations) * 100",
      "Id": "expr_1",
      "Label": "invocations_errored_percentage_last_5_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "lambdafunctionLambdaFunction099DEFEA"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "lambdafunctionLambdaFunction099DEFEA"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "lambdafunctionLambdaP99LongDurationGreaterThan1s6B968560": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineErrorTopic38C39788"
     }
    ],
    "DatapointsToAlarm": 1,
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "lambdafunctionLambdaFunction099DEFEA"
      }
     }
    ],
    "ExtendedStatistic": "p99",
    "MetricName": "Duration",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Threshold": 1000,
    "TreatMissingData": "notBreaching"
   }
  },
  "lambdafunctionLambdaThrottledInvocationsGreaterThan2Percent255382E7": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineErrorTopic38C39788"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "(throttles * 100) / (invocations + throttles)",
      "Id": "expr_1",
      "Label": "throttled_requests_percentage_last_30_mins"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "lambdafunctionLambdaFunction099DEFEA"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "throttles",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "lambdafunctionLambdaFunction099DEFEA"
          }
         }
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 2,
    "TreatMissingData": "notBreaching"
   }
  },
  "lambdafunctionCloudWatchDashBoard2D3D8E6D": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_error_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"invocations_errored_percentage_last_5_mins\",\"expression\":\"(errors / invocations) * 100\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"errors\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_duration\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"p99\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"lambda_throttle_percentage\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[{\"label\":\"throttled_requests_percentage_last_30_mins\",\"expression\":\"(throttles * 100) / (invocations + throttles)\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"invocations\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "lambdafunctionLambdaFunction099DEFEA"
       },
       "\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"throttles\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    }
   }
  },
  "StateMachineRoleB840431D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::FindInMap": [
          "ServiceprincipalMap",
          {
           "Ref": "AWS::Region"
          },
          "states"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "StateMachineRoleDefaultPolicyDF1E6607": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords",
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "lambdafunctionLambdaFunction099DEFEA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "lambdafunctionLambdaFunction099DEFEA",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StateMachineRoleDefaultPolicyDF1E6607",
    "Roles": [
     {
      "Ref": "StateMachineRoleB840431D"
     }
    ]
   }
  },
  "StateMachine2E01A3A5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "StateMachineRoleB840431D",
      "Arn"
     ]
    },
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"InvokeLambdaFunction\",\"States\":{\"InvokeLambdaFunction\":{\"Next\":\"isValid?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputPath\",\"ResultPath\":\"$.resultPath\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "lambdafunctionLambdaFunction099DEFEA",
         "Arn"
        ]
       },
       "\"},\"isValid?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.resultPath.isValid\",\"BooleanEquals\":true,\"Next\":\"Failed\"}],\"Default\":\"Success\"},\"Success\":{\"Type\":\"Succeed\",\"OutputPath\":\"$.resultPath\"},\"Failed\":{\"Type\":\"Fail\",\"Error\":\"Error\",\"Cause\":\"Excpetion\"}},\"TimeoutSeconds\":300}"
      ]
     ]
    },
    "StateMachineType": "EXPRESS",
    "TracingConfiguration": {
     "Enabled": true
    }
   },
   "DependsOn": [
    "StateMachineRoleDefaultPolicyDF1E6607",
    "StateMachineRoleB840431D"
   ]
  },
  "StateMachineHttpApiErrorTopic75830D69": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "ErrorTopic"
   }
  },
  "StateMachineHttpApiHttpAPI6BCB919B": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "HttpAPI",
    "ProtocolType": "HTTP"
   }
  },
  "StateMachineHttpApiHttpAPIDefaultStage4988B07C": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
    },
    "StageName": "$default",
    "AutoDeploy": true
   }
  },
  "StateMachineHttpApiApiGatewayCloudWatchErrorTopicB64AE6D3": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "ErrorTopic"
   }
  },
  "StateMachineHttpApiApiGatewayCloudWatchApiGateway4XXErrorsGreaterThan1PercentBB9F132C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineHttpApiApiGatewayCloudWatchErrorTopicB64AE6D3"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Expression": "m1 / m2 * 100",
      "Id": "expr_1",
      "Label": "api_gateway_4XX_errors_percentage"
     },
     {
      "Id": "m1",
      "Label": "4XX_errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
          }
         }
        ],
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 300,
       "Stat": "Sum",
       "Unit": "Count"
      },
      "ReturnData": false
     },
     {
      "Id": "m2",
      "Label": "number_of_requests",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
          }
         }
        ],
        "MetricName": "Count",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 300,
       "Stat": "Sum",
       "Unit": "Count"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 1,
    "TreatMissingData": "notBreaching"
   }
  },
  "StateMachineHttpApiApiGatewayCloudWatchAPIGateway5XXErrorsGreaterThan01710DD05": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineHttpApiApiGatewayCloudWatchErrorTopicB64AE6D3"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Id": "m1",
      "Label": "api_gateway_5XX_errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
          }
         }
        ],
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 900,
       "Stat": "p99",
       "Unit": "Count"
      },
      "ReturnData": true
     }
    ],
    "Threshold": 0,
    "TreatMissingData": "notBreaching"
   }
  },
  "StateMachineHttpApiApiGatewayCloudWatchApiGatewayP99LatencyGreaterThan1sC01E591D": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 6,
    "AlarmActions": [
     {
      "Ref": "StateMachineHttpApiApiGatewayCloudWatchErrorTopicB64AE6D3"
     }
    ],
    "DatapointsToAlarm": 1,
    "Metrics": [
     {
      "Id": "m1",
      "Label": "api_gateway_latency",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "ApiId",
          "Value": {
           "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
          }
         }
        ],
        "MetricName": "Latency",
        "Namespace": "AWS/ApiGateway"
       },
       "Period": 900,
       "Stat": "p99",
       "Unit": "Count"
      },
      "ReturnData": true
     }
    ],
    "Threshold": 1000,
    "TreatMissingData": "notBreaching"
   }
  },
  "StateMachineHttpApiApiGatewayCloudWatchCloudWatchDashBoardD7DA8951": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Requests\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":false,\"metrics\":[[\"AWS/ApiGateway\",\"Count\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"# Requests\",\"period\":900,\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"api_gateway_latency\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"api_gateway_latency_p50\",\"period\":900,\"stat\":\"p50\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"api_gateway_latency_p90\",\"period\":900,\"stat\":\"p90\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"api_gateway_latency_p99\",\"period\":900,\"stat\":\"p99\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":8,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"api_gateway_errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"stacked\":true,\"metrics\":[[\"AWS/ApiGateway\",\"4XXError\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"api_gateway_4XXErrors\",\"period\":900,\"stat\":\"Sum\"}],[\"AWS/ApiGateway\",\"5XXError\",\"ApiId\",\"",
       {
        "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
       },
       "\",{\"label\":\"api_gateway_5XXErrors\",\"period\":900,\"stat\":\"Sum\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    }
   }
  },
  "StateMachineHttpApiIamRole97F83315": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "states:StartSyncExecution",
         "Effect": "Allow",
         "Resource": {
          "Ref": "StateMachine2E01A3A5"
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "AllowSFNExec"
     }
    ]
   }
  },
  "StateMachineHttpApiIntegration": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
    },
    "IntegrationType": "AWS_PROXY",
    "ConnectionType": "INTERNET",
    "CredentialsArn": {
     "Fn::GetAtt": [
      "StateMachineHttpApiIamRole97F83315",
      "Arn"
     ]
    },
    "IntegrationSubtype": "StepFunctions-StartSyncExecution",
    "PayloadFormatVersion": "1.0",
    "RequestParameters": {
     "Input": "$request.body",
     "StateMachineArn": {
      "Ref": "StateMachine2E01A3A5"
     }
    },
    "TimeoutInMillis": 10000
   }
  },
  "StateMachineHttpApiDefaultRoute": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
    },
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "StateMachineHttpApiIntegration"
       }
      ]
     ]
    }
   }
  }
 },
 "Outputs": {
  "StateMachineHttpApiHTTPAPIUrlF088CA52": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "StateMachineHttpApiHttpAPI6BCB919B"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Mappings": {
  "ServiceprincipalMap": {
   "af-south-1": {
    "states": "states.af-south-1.amazonaws.com"
   },
   "ap-east-1": {
    "states": "states.ap-east-1.amazonaws.com"
   },
   "ap-northeast-1": {
    "states": "states.ap-northeast-1.amazonaws.com"
   },
   "ap-northeast-2": {
    "states": "states.ap-northeast-2.amazonaws.com"
   },
   "ap-northeast-3": {
    "states": "states.ap-northeast-3.amazonaws.com"
   },
   "ap-south-1": {
    "states": "states.ap-south-1.amazonaws.com"
   },
   "ap-southeast-1": {
    "states": "states.ap-southeast-1.amazonaws.com"
   },
   "ap-southeast-2": {
    "states": "states.ap-southeast-2.amazonaws.com"
   },
   "ap-southeast-3": {
    "states": "states.ap-southeast-3.amazonaws.com"
   },
   "ca-central-1": {
    "states": "states.ca-central-1.amazonaws.com"
   },
   "cn-north-1": {
    "states": "states.cn-north-1.amazonaws.com"
   },
   "cn-northwest-1": {
    "states": "states.cn-northwest-1.amazonaws.com"
   },
   "eu-central-1": {
    "states": "states.eu-central-1.amazonaws.com"
   },
   "eu-north-1": {
    "states": "states.eu-north-1.amazonaws.com"
   },
   "eu-south-1": {
    "states": "states.eu-south-1.amazonaws.com"
   },
   "eu-south-2": {
    "states": "states.eu-south-2.amazonaws.com"
   },
   "eu-west-1": {
    "states": "states.eu-west-1.amazonaws.com"
   },
   "eu-west-2": {
    "states": "states.eu-west-2.amazonaws.com"
   },
   "eu-west-3": {
    "states": "states.eu-west-3.amazonaws.com"
   },
   "me-south-1": {
    "states": "states.me-south-1.amazonaws.com"
   },
   "sa-east-1": {
    "states": "states.sa-east-1.amazonaws.com"
   },
   "us-east-1": {
    "states": "states.us-east-1.amazonaws.com"
   },
   "us-east-2": {
    "states": "states.us-east-2.amazonaws.com"
   },
   "us-gov-east-1": {
    "states": "states.us-gov-east-1.amazonaws.com"
   },
   "us-gov-west-1": {
    "states": "states.us-gov-west-1.amazonaws.com"
   },
   "us-iso-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-iso-west-1": {
    "states": "states.amazonaws.com"
   },
   "us-isob-east-1": {
    "states": "states.amazonaws.com"
   },
   "us-west-1": {
    "states": "states.us-west-1.amazonaws.com"
   },
   "us-west-2": {
    "states": "states.us-west-2.amazonaws.com"
   }
  }
 }
}