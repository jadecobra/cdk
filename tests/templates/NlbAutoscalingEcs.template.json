{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc"
          }
        ]
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": ["VpcVPCGWBF912B6E"]
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "AllocationId": {
          "Fn::GetAtt": ["VpcPublicSubnet1EIPD7E02669", "AllocationId"]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": ["VpcVPCGWBF912B6E"]
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        },
        "AllocationId": {
          "Fn::GetAtt": ["VpcPublicSubnet2EIP3C605A87", "AllocationId"]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
        }
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "EcsCluster97242B84": {
      "Type": "AWS::ECS::Cluster"
    },
    "EcsCluster72B17558": {
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
      "Properties": {
        "CapacityProviders": [
          {
            "Ref": "AsgCapacityProvider760D11D9"
          }
        ],
        "Cluster": {
          "Ref": "EcsCluster97242B84"
        },
        "DefaultCapacityProviderStrategy": []
      }
    },
    "AutoScalingGroupInstanceSecurityGroup9D2E0C5E": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "NlbAutoscalingEcs/AutoScalingGroup/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/AutoScalingGroup"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "AutoScalingGroupInstanceRoleDC70D128": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NlbAutoscalingEcs/AutoScalingGroup"
          }
        ]
      }
    },
    "AutoScalingGroupInstanceRoleDefaultPolicy3DF09528": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:DeregisterContainerInstance",
                "ecs:RegisterContainerInstance",
                "ecs:Submit*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["EcsCluster97242B84", "Arn"]
              }
            },
            {
              "Action": ["ecs:Poll", "ecs:StartTelemetrySession"],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": ["EcsCluster97242B84", "Arn"]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:DiscoverPollEndpoint",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AutoScalingGroupInstanceRoleDefaultPolicy3DF09528",
        "Roles": [
          {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128"
          }
        ]
      }
    },
    "AutoScalingGroupInstanceProfile342FAC7C": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AutoScalingGroupInstanceRoleDC70D128"
          }
        ]
      }
    },
    "AutoScalingGroupLaunchConfigDEEB160C": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "AutoScalingGroupInstanceProfile342FAC7C"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "AutoScalingGroupInstanceSecurityGroup9D2E0C5E",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\necho ECS_CLUSTER=",
                {
                  "Ref": "EcsCluster97242B84"
                },
                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "AutoScalingGroupInstanceRoleDefaultPolicy3DF09528",
        "AutoScalingGroupInstanceRoleDC70D128"
      ]
    },
    "AutoScalingGroupASG804C35BE": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "AutoScalingGroupLaunchConfigDEEB160C"
        },
        "NewInstancesProtectedFromScaleIn": true,
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "NlbAutoscalingEcs/AutoScalingGroup"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "AsgCapacityProvider760D11D9": {
      "Type": "AWS::ECS::CapacityProvider",
      "Properties": {
        "AutoScalingGroupProvider": {
          "AutoScalingGroupArn": {
            "Ref": "AutoScalingGroupASG804C35BE"
          },
          "ManagedScaling": {
            "Status": "ENABLED",
            "TargetCapacity": 100
          },
          "ManagedTerminationProtection": "ENABLED"
        }
      }
    },
    "Ec2ServiceLB381329CE": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3"
          }
        ],
        "Type": "network"
      },
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet2DefaultRoute97F91067"
      ]
    },
    "Ec2ServiceLBPublicListenerA941070C": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "Ec2ServiceLBPublicListenerECSGroup3DC8690E"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "Ec2ServiceLB381329CE"
        },
        "Port": 80,
        "Protocol": "TCP"
      }
    },
    "Ec2ServiceLBPublicListenerECSGroup3DC8690E": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "instance",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "Ec2ServiceTaskDefTaskRole27A5D642": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "Ec2ServiceTaskDef8D94BAA3": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "Ec2ServiceTaskDefwebLogGroup923CD0CD"
                },
                "awslogs-stream-prefix": "Ec2Service",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Memory": 512,
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 0,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": ["Ec2ServiceTaskDefExecutionRole0B89ED3C", "Arn"]
        },
        "Family": "NlbAutoscalingEcsEc2ServiceTaskDefE4D5C714",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": ["EC2"],
        "TaskRoleArn": {
          "Fn::GetAtt": ["Ec2ServiceTaskDefTaskRole27A5D642", "Arn"]
        }
      }
    },
    "Ec2ServiceTaskDefwebLogGroup923CD0CD": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "Ec2ServiceTaskDefExecutionRole0B89ED3C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "Ec2ServiceTaskDefExecutionRoleDefaultPolicy7E1456F8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["Ec2ServiceTaskDefwebLogGroup923CD0CD", "Arn"]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Ec2ServiceTaskDefExecutionRoleDefaultPolicy7E1456F8",
        "Roles": [
          {
            "Ref": "Ec2ServiceTaskDefExecutionRole0B89ED3C"
          }
        ]
      }
    },
    "Ec2Service398F0E46": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "EcsCluster97242B84"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "EC2",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "Ec2ServiceLBPublicListenerECSGroup3DC8690E"
            }
          }
        ],
        "SchedulingStrategy": "REPLICA",
        "TaskDefinition": {
          "Ref": "Ec2ServiceTaskDef8D94BAA3"
        }
      },
      "DependsOn": [
        "Ec2ServiceLBPublicListenerECSGroup3DC8690E",
        "Ec2ServiceLBPublicListenerA941070C"
      ]
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "Ec2ServiceLoadBalancerDNS6983C9B2": {
      "Value": {
        "Fn::GetAtt": ["Ec2ServiceLB381329CE", "DNSName"]
      }
    },
    "LoadBalancerDNS": {
      "Value": {
        "Fn::GetAtt": ["Ec2ServiceLB381329CE", "DNSName"]
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  ["1", "2", "3", "4", "5"],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
